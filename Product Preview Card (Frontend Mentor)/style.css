/* Custom properties */
:root {
    --clr-primary-400: hsl(158, 36%, 37%);
    --clr-primary-500: hsl(158, 36%, 20%);
    --clr-secondary-200: hsl(30, 38%, 92%);

    --clr-neutral-900: hwb(212 11% 83%);
    --clr-neutral-400: hsl(228, 12%, 48%);
    --clr-neutral-100: hsl(0, 0%, 100%);

    --ff-accent: 'Fraunces', serif;
    --ff-base: 'Montserrat', sans-serif;

    --fw-regular: 500;
    --fw-bold: 700;
}

/* CSS resets */
/* Using box sizing on all of our elements */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Removing all default margins for elements */
* {
    margin: 0;
}

/* Allow percentage based heights in html and body */
html,
body {
    height: 100%;
}

body {
    line-height: 1.7;
    -webkit-font-smoothing: antialiased;
}

/* Improving media defaults, images are now responsive */
img,
picture,
video,
canvas,
svg {
    /* block means it takes up the entire width available */
    display: block;
    max-width: 100%;
}

/* Buttons and other elements are now changed when the font style is set */
input,
button,
textarea,
select {
    font: inherit;
}

/* For avoiding text overflows, makes sures that text is within the screen */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

h1,
h2,
h3 {
    line-height: 1;
}

body {
    /* Using our custom variables for our font-family */
    font-family: var(--ff-base);
    font-weight: var(--fw-regular);
    color: var(--clr-neutral-400);
    font-size: 0.875rem;
    background-color: var(--clr-secondary-200);

    display: grid;
    place-content: center;
    margin: 1rem;
}

/* utilities */
.flex-group {
    display: flex;
    gap: 1rem;
    /* makes sure the flex wraps when the screen is too small */
    flex-wrap: wrap;
    align-items: center;
}

/* for screen readers */
.visually-hidden:not(:focus):not(:active) {
    clip: rect(0, 0, 0, 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.product {
    /* custom padding for this div's components */
    --content-padding: 2rem;
    --content-spacing: 1rem;

    display: grid;
    background-color: var(--clr-neutral-100);
    border-radius: 0.5rem;
    overflow: hidden;
    max-width: 600px;
}

@media (min-width: 600px) {

    .product {
        --content-padding: 2rem;
        grid-template-columns: 1fr 1fr;
    }

}

.product-content {
    display: grid;
    gap: var(--content-spacing);
    padding: var(--content-padding);
}

.product-category {
    font-size: 0.8125rem;
    letter-spacing: 5px;
    text-transform: uppercase;
}

.product-title {
    font-size: 2rem;
    font-family: var(--ff-accent);
    color: var(--clr-neutral-900);
}

.product-price {
    font-size: 2rem;
    font-family: var(--ff-accent);
    color: var(--clr-primary-400);
}

/* styling the button at the bottom */
.button {
    cursor: pointer;
    text-decoration: none;
    display: inline-flex;
    gap: .75rem;
    justify-content: center;
    align-items: center;

    /* top and bottom, left and right */
    border: 0;
    border-radius: 0.5rem;
    padding: .75em 1.5em;
    background-color: var(--clr-primary-400);
    color: var(--clr-neutral-100);
    font-weight: var(--fw-bold);
    font-size: 0.925rem;
}

/* selecting button hover and focus at the same time */
.button:is(:hover, :focus) {
    background-color: var(--clr-primary-500);
}

/* setting the icon for our button */
/* ::before means that the icon is added before the content or in this case text */
.button[data-icon="shopping-cart"]::before {
    content: "";
    background-image: url('images/icon-cart.svg');
    width: 15px;
    height: 16px;
}

.attribution {
    font-size: 11px;
    text-align: center;
}

.attribution a {
    color: hsl(228, 45%, 44%);
}